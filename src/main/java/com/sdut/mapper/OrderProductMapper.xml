<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sdut.mapper.OrderProductMapper" >
  <resultMap id="BaseResultMap" type="com.sdut.pojo.OrderProduct" >
    <id column="order_product_id" property="orderProductId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_count" property="productCount" jdbcType="INTEGER" />
    <result column="product_price" property="productPrice" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_product_id, order_id, product_id, product_count, product_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sdut.pojo.OrderProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_product
    where order_product_id = #{orderProductId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_product
    where order_product_id = #{orderProductId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdut.pojo.OrderProductExample" >
    delete from order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdut.pojo.OrderProduct" >
    insert into order_product (order_product_id, order_id, product_id, 
      product_count, product_price)
    values (#{orderProductId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{productCount,jdbcType=INTEGER}, #{productPrice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.sdut.pojo.OrderProduct" >
    insert into order_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderProductId != null" >
        order_product_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productCount != null" >
        product_count,
      </if>
      <if test="productPrice != null" >
        product_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderProductId != null" >
        #{orderProductId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="productPrice != null" >
        #{productPrice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdut.pojo.OrderProductExample" resultType="java.lang.Integer" >
    select count(*) from order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_product
    <set >
      <if test="record.orderProductId != null" >
        order_product_id = #{record.orderProductId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productCount != null" >
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.productPrice != null" >
        product_price = #{record.productPrice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_product
    set order_product_id = #{record.orderProductId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_count = #{record.productCount,jdbcType=INTEGER},
      product_price = #{record.productPrice,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdut.pojo.OrderProduct" >
    update order_product
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="productPrice != null" >
        product_price = #{productPrice,jdbcType=DOUBLE},
      </if>
    </set>
    where order_product_id = #{orderProductId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdut.pojo.OrderProduct" >
    update order_product
    set order_id = #{orderId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      product_count = #{productCount,jdbcType=INTEGER},
      product_price = #{productPrice,jdbcType=DOUBLE}
    where order_product_id = #{orderProductId,jdbcType=INTEGER}
  </update>
</mapper>